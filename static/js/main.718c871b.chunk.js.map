{"version":3,"sources":["store/todos/types.ts","store/todos/reducer.ts","store/store.ts","store/todos/selectors.ts","types/api.ts","api/base.ts","api/todos.ts","api/index.ts","store/todos/actions.ts","store/todos/operations.ts","utils/date.ts","components/TodoDeleteDialog.tsx","forms/TodoForm.tsx","components/TodoEditDialog.tsx","components/TodoViewDialog.tsx","components/TodoListItem.tsx","components/TodoList.tsx","components/TodoListHeader.tsx","components/TodoAddDialog.tsx","components/FloatingActionButton.tsx","pages/TodoListPage.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["SAVE_TODOS_LIST","SAVE_TODO","ADD_TODO","REMOVE_TODO","todosReducer","produce","draft","action","type","todoList","todos","todo","id","push","todoId","filter","rootReducer","combineReducers","storeEnhancer","applyMiddleware","thunk","getLocalState","state","StatusMessageType","DEFAULT_API_RESPONSE","Object","freeze","code","payload","messages","content","Error","processRequest","endpoint","promise","then","response","data","catch","error","TodosAPI","this","get","getTodoUrl","post","put","delete","client","axios","create","baseURL","process","url","params","patch","clientGet","clientPost","clientPut","clientPatch","clientDelete","api","addTodo","removeTodo","createTodo","dispatch","a","todoData","updateTodo","editTodo","batch","formatDate","date","moment","format","TodoDeleteDialog","isOpen","handleClose","useDispatch","Dialog","open","onClose","maxWidth","fullWidth","scroll","DialogTitle","name","DialogContent","Typography","DialogActions","Button","color","onClick","deleteTodo","useStyles","makeStyles","form","paddingTop","validationSchema","Yup","shape","required","dueDate","TodoForm","classes","useFormikContext","errors","handleChange","setFieldTouched","setFieldValue","touched","values","className","Grid","container","spacing","item","xs","TextField","label","value","onChange","onBlur","Boolean","helperText","variant","LocalizationProvider","dateAdapter","DateAdapter","DatePicker","renderInput","description","multiline","rows","TodoEditDialog","handleUpdate","todoFormData","todoPutData","isCompleted","initialValues","onSubmit","validateOnMount","formikProps","handleSubmit","disabled","isSubmitting","isValid","icon","paddingRight","row","display","flexDirection","alignItems","TodoViewDialog","useEffect","getTodo","loadTodo","useSelector","useState","isDeleteDialogOpen","setIsDeleteDialogOpen","isEditDialogOpen","setIsEditDialogOpen","Box","paper","margin","padding","backgroundColor","opacity","cursor","TodoListItem","isSelected","setIsSelected","Paper","Chip","TodoList","getTodoList","sort","b","valueOf","map","AppBarStyle","background","TodoListHeader","AppBar","position","style","Toolbar","TodoAddDialog","handleAdd","todoPostData","Date","fab","bottom","right","FloatingActionButton","isAddDialogOpen","setIsAddDialogOpen","Fab","TodoListPage","getTodosList","todoListData","App","store","createStore","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.718c871b.chunk.js","sourcesContent":["import { TodoData, TodoListData } from '../../types/todos';\n\n// Action names\nexport const SAVE_TODOS_LIST = 'todos/SAVE_TODOS_LIST';\nexport const SAVE_TODO = 'todos/SAVE_TODO';\nexport const ADD_TODO = 'todos/ADD_TODO';\nexport const REMOVE_TODO = 'todos/REMOVE_TODO';\n\n// Action types\nexport interface SaveTodosListAction {\n  type: typeof SAVE_TODOS_LIST;\n  todoList: TodoListData[];\n}\n\nexport interface SaveTodoAction {\n  type: typeof SAVE_TODO;\n  todo: TodoData;\n}\n\nexport interface AddTodoAction {\n  type: typeof ADD_TODO;\n  todo: TodoData;\n}\n\nexport interface RemoveTodoAction {\n  type: typeof REMOVE_TODO;\n  todoId: number;\n}\n\nexport type TodoActionTypes = SaveTodosListAction | SaveTodoAction | AddTodoAction | RemoveTodoAction;\n\nexport interface TodosState {\n  todoList: TodoListData[];\n  todos: Record<number, TodoData>;\n}\n","import produce from 'immer';\nimport { ADD_TODO, REMOVE_TODO, SAVE_TODO, SAVE_TODOS_LIST, TodoActionTypes, TodosState } from './types';\nimport { TodoListData } from '../../types/todos';\n\nconst initialState: TodosState = {\n  todoList: [],\n  todos: {},\n};\n\nconst todosReducer = produce((draft: TodosState, action: TodoActionTypes) => {\n  switch (action.type) {\n    case SAVE_TODOS_LIST: {\n      draft.todoList = action.todoList;\n      break;\n    }\n    case SAVE_TODO: {\n      draft.todos[action.todo.id] = action.todo;\n      break;\n    }\n    case ADD_TODO: {\n      draft.todos[action.todo.id] = action.todo;\n      draft.todoList.push(action.todo);\n      break;\n    }\n    case REMOVE_TODO: {\n      delete draft.todos[action.todoId];\n      draft.todoList = draft.todoList.filter((todo: TodoListData) => todo.id !== action.todoId);\n      break;\n    }\n    default: {\n      break;\n    }\n  }\n}, initialState);\n\nexport default todosReducer;\n","import { applyMiddleware, combineReducers, createStore, Reducer } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\nimport { TodosState } from './todos/types';\nimport todosReducer from './todos/reducer';\n\nexport interface AppState {\n  todos: TodosState;\n}\n\nconst rootReducer: Reducer<AppState> = combineReducers<AppState>({\n  todos: todosReducer,\n});\n\nconst storeEnhancer = applyMiddleware(thunk);\n\nexport default function configureStore() {\n  const isDevelopment = process.env.NODE_ENV === 'development';\n  return createStore(rootReducer, isDevelopment ? composeWithDevTools(storeEnhancer) : storeEnhancer);\n}\n","import { AppState } from '../store';\n\nfunction getLocalState(state: AppState) {\n  return state.todos;\n}\n\nexport function getTodoList(state: AppState) {\n  return getLocalState(state).todoList;\n}\n\nexport function getTodo(state: AppState, todoId: number) {\n  return getLocalState(state).todos[todoId];\n}\n","export enum StatusMessageType {\n  Error = 0,\n  Warning = 1,\n  Information = 2,\n  Success = 3,\n}\n\nexport interface StatusMessage {\n  content: string;\n  type: StatusMessageType;\n}\n\nexport interface ApiResponse<D> {\n  code: number;\n  payload: D;\n  messages: StatusMessage[];\n}\n\nexport type ApiPromise<D> = Promise<ApiResponse<D>>;\n","import axios, { AxiosError, AxiosPromise, AxiosRequestConfig, AxiosResponse } from 'axios';\nimport { ApiPromise, ApiResponse, StatusMessageType } from '../types/api';\n\nconst DEFAULT_API_RESPONSE: ApiResponse<{}> = Object.freeze({\n  code: -1,\n  payload: {},\n  messages: [\n    {\n      content: 'Request failed. Please check your Internet connection.',\n      type: StatusMessageType.Error,\n    },\n  ],\n});\n\nfunction getResponseMessages<D>(response: ApiResponse<D>): string {\n  return response.messages.map((message) => message.content).join('; ');\n}\n\nfunction processRequest<D>(endpoint: string, promise: AxiosPromise<ApiResponse<D>>): ApiPromise<D> {\n  return promise\n    .then((response: AxiosResponse<ApiResponse<D>>) => {\n      const apiResponse: ApiResponse<D> = response.data;\n      if (process.env.NODE_ENV === 'development') {\n        // eslint-disable-next-line no-console\n        console.info(`[API] ${apiResponse.code} ${endpoint} : ${getResponseMessages(apiResponse)}`);\n      }\n      return apiResponse;\n    })\n    .catch((error: AxiosError<ApiResponse<D>>) => {\n      const apiResponse: ApiResponse<{}> =\n        error.response && error.response.data ? error.response.data : DEFAULT_API_RESPONSE;\n      if (process.env.NODE_ENV === 'development') {\n        // eslint-disable-next-line no-console\n        console.error(`[API] ${apiResponse.code} ${endpoint} : ${getResponseMessages(apiResponse)}`);\n      }\n      throw apiResponse;\n    });\n}\n\nclass BaseAPI {\n  private client = axios.create({\n    baseURL: process.env.REACT_APP_BASE_URL,\n  });\n\n  private clientGet<D, R>(url: string, params?: AxiosRequestConfig<D>): AxiosPromise<ApiResponse<R>> {\n    return this.client.get(url, params);\n  }\n\n  private clientPost<D, R>(url: string, data: D): AxiosPromise<ApiResponse<R>> {\n    return this.client.post(url, data);\n  }\n\n  private clientPut<D, R>(url: string, data: D): AxiosPromise<ApiResponse<R>> {\n    return this.client.put(url, data);\n  }\n\n  private clientPatch<D, R>(url: string, data: D): AxiosPromise<ApiResponse<R>> {\n    return this.client.patch(url, data);\n  }\n\n  private clientDelete<R>(url: string): AxiosPromise<ApiResponse<R>> {\n    return this.client.delete(url);\n  }\n\n  protected get<D, R>(url: string, params?: AxiosRequestConfig<D>): ApiPromise<R> {\n    return processRequest(url, this.clientGet(url, params));\n  }\n\n  protected post<D, R>(url: string, data: D): ApiPromise<R> {\n    return processRequest(url, this.clientPost(url, data));\n  }\n\n  protected put<D, R>(url: string, data: D): ApiPromise<R> {\n    return processRequest(url, this.clientPut(url, data));\n  }\n\n  protected patch<D, R>(url: string, data: D): ApiPromise<R> {\n    return processRequest(url, this.clientPatch(url, data));\n  }\n\n  protected delete<R>(url: string): ApiPromise<R> {\n    return processRequest(url, this.clientDelete(url));\n  }\n}\n\nexport default BaseAPI;\n","import BaseAPI from './base';\nimport { ApiPromise } from '../types/api';\nimport { TodoData, TodoListData, TodoPostData, TodoPutData } from '../types/todos';\n\nclass TodosAPI extends BaseAPI {\n  protected static getTodoUrl() {\n    return 'todos';\n  }\n\n  public getTodosList(): ApiPromise<TodoListData[]> {\n    return this.get(TodosAPI.getTodoUrl());\n  }\n\n  public getTodo(todoId: number): ApiPromise<TodoData> {\n    return this.get(`${TodosAPI.getTodoUrl()}/${todoId}`);\n  }\n\n  public addTodo(todo: TodoPostData): ApiPromise<TodoData> {\n    return this.post(`${TodosAPI.getTodoUrl()}`, todo);\n  }\n\n  public editTodo(todo: TodoPutData): ApiPromise<TodoData> {\n    return this.put(`${TodosAPI.getTodoUrl()}/${todo.id}`, todo);\n  }\n\n  public deleteTodo(todoId: number): ApiPromise<{}> {\n    return this.delete(`${TodosAPI.getTodoUrl()}/${todoId}`);\n  }\n}\n\nexport default TodosAPI;\n","import TodosAPI from './todos';\n\nconst api = Object.freeze({\n  todos: new TodosAPI(),\n});\n\nexport default api;\n","import { TodoData, TodoListData } from '../../types/todos';\nimport {\n  ADD_TODO,\n  AddTodoAction,\n  REMOVE_TODO,\n  RemoveTodoAction,\n  SAVE_TODO,\n  SAVE_TODOS_LIST,\n  SaveTodoAction,\n  SaveTodosListAction,\n} from './types';\n\nexport function saveTodoList(todoList: TodoListData[]): SaveTodosListAction {\n  return {\n    type: SAVE_TODOS_LIST,\n    todoList,\n  };\n}\n\nexport function saveTodo(todo: TodoData): SaveTodoAction {\n  return {\n    type: SAVE_TODO,\n    todo,\n  };\n}\n\nexport function addTodo(todo: TodoData): AddTodoAction {\n  return {\n    type: ADD_TODO,\n    todo,\n  };\n}\n\nexport function removeTodo(todoId: number): RemoveTodoAction {\n  return {\n    type: REMOVE_TODO,\n    todoId,\n  };\n}\n","import { ThunkDispatch } from 'redux-thunk';\nimport { AnyAction } from 'redux';\nimport { batch } from 'react-redux';\nimport { TodoData, TodoListData, TodoPostData, TodoPutData } from '../../types/todos';\nimport api from '../../api';\nimport { addTodo, removeTodo, saveTodo, saveTodoList } from './actions';\nimport { AppState } from '../store';\n\nexport function loadAllTodos() {\n  return async (dispatch: ThunkDispatch<AppState, undefined, AnyAction>) => {\n    const response = await api.todos.getTodosList();\n    const todoListData: TodoListData[] = response.payload;\n    dispatch(saveTodoList(todoListData));\n  };\n}\n\nexport function loadTodo(todoId: number) {\n  return async (dispatch: ThunkDispatch<AppState, undefined, AnyAction>) => {\n    const response = await api.todos.getTodo(todoId);\n    const todoData: TodoData = response.payload;\n    dispatch(saveTodo(todoData));\n  };\n}\n\nexport function createTodo(todo: TodoPostData) {\n  return async (dispatch: ThunkDispatch<AppState, undefined, AnyAction>) => {\n    const response = await api.todos.addTodo(todo);\n    const todoData: TodoData = response.payload;\n    dispatch(addTodo(todoData));\n  };\n}\n\nexport function updateTodo(todo: TodoPutData) {\n  return async (dispatch: ThunkDispatch<AppState, undefined, AnyAction>) => {\n    const response = await api.todos.editTodo(todo);\n    const todoData: TodoData = response.payload;\n    batch(() => {\n      dispatch(removeTodo(todoData.id));\n      dispatch(addTodo(todoData));\n    });\n  };\n}\n\nexport function deleteTodo(todoId: number) {\n  return async (dispatch: ThunkDispatch<AppState, undefined, AnyAction>) => {\n    await api.todos.deleteTodo(todoId);\n    dispatch(removeTodo(todoId));\n  };\n}\n","import moment from 'moment';\n\nconst formatDate = (date: Date): string => moment(date).format('D MMMM YYYY');\n\nexport default formatDate;\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Button, Dialog, DialogActions, DialogContent, DialogTitle, Typography } from '@mui/material';\nimport { deleteTodo } from '../store/todos/operations';\nimport { TodoData } from '../types/todos';\n\ninterface Props {\n  todo: TodoData;\n  isOpen: boolean;\n  handleClose: () => void;\n}\n\nconst TodoDeleteDialog: React.FunctionComponent<Props> = ({ todo, isOpen, handleClose }: Props) => {\n  const dispatch = useDispatch();\n  const handleDelete = () => dispatch(deleteTodo(todo.id));\n\n  return (\n    <Dialog open={isOpen} onClose={handleClose} maxWidth=\"md\" fullWidth scroll=\"paper\">\n      <DialogTitle>{`Delete todo - ${todo.name}`}</DialogTitle>\n      <DialogContent>\n        <Typography>Are you sure you want to delete this todo?</Typography>\n      </DialogContent>\n      <DialogActions>\n        <Button color=\"secondary\" onClick={handleDelete}>\n          Yes\n        </Button>\n        <Button color=\"primary\" onClick={handleClose}>\n          No\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\n\nexport default TodoDeleteDialog;\n","import React from 'react';\nimport { Form, useFormikContext } from 'formik';\nimport { Grid, TextField } from '@mui/material';\nimport DatePicker from '@mui/lab/DatePicker';\nimport { LocalizationProvider } from '@mui/lab';\nimport DateAdapter from '@mui/lab/AdapterMoment';\nimport { makeStyles } from '@mui/styles';\nimport * as Yup from 'yup';\n\nconst useStyles = makeStyles(() => ({\n  form: {\n    paddingTop: '5px',\n  },\n}));\n\nexport interface TodoFormData {\n  name: string;\n  description: string;\n  dueDate: Date;\n}\n\nexport const validationSchema = Yup.object().shape({\n  name: Yup.string().required('Name is required'),\n  dueDate: Yup.date().required('Due Date is required'),\n});\n\nconst TodoForm: React.FunctionComponent = () => {\n  const classes = useStyles();\n  const { errors, handleChange, setFieldTouched, setFieldValue, touched, values } = useFormikContext<TodoFormData>();\n\n  return (\n    <Form className={classes.form}>\n      <Grid container spacing={2}>\n        <Grid item xs={8}>\n          <TextField\n            name=\"name\"\n            label=\"Name\"\n            value={values.name}\n            onChange={handleChange}\n            onBlur={() => setFieldTouched('name')}\n            error={touched.name && Boolean(errors.name)}\n            helperText={touched.name ? errors.name : ''}\n            variant=\"outlined\"\n            fullWidth\n            required\n          />\n        </Grid>\n        <Grid item xs={4}>\n          <LocalizationProvider dateAdapter={DateAdapter}>\n            <DatePicker\n              label=\"Due Date\"\n              value={values.dueDate}\n              onChange={(date) => {\n                setFieldValue('dueDate', date);\n                setFieldTouched('dueDate');\n              }}\n              renderInput={(params) => (\n                <TextField\n                  {...params}\n                  error={touched.dueDate && Boolean(errors.dueDate)}\n                  helperText={touched.dueDate ? errors.dueDate : ''}\n                  required\n                />\n              )}\n            />\n          </LocalizationProvider>\n        </Grid>\n        <Grid item xs={12}>\n          <TextField\n            name=\"description\"\n            label=\"Description\"\n            value={values.description}\n            onChange={handleChange}\n            onBlur={() => setFieldTouched('description')}\n            error={touched.description && Boolean(errors.description)}\n            helperText={touched.description ? errors.description : ''}\n            variant=\"outlined\"\n            fullWidth\n            multiline\n            rows={5}\n          />\n        </Grid>\n      </Grid>\n    </Form>\n  );\n};\n\nexport default TodoForm;\n","import React from 'react';\nimport { Button, Dialog, DialogActions, DialogContent, DialogTitle } from '@mui/material';\nimport { useDispatch } from 'react-redux';\nimport { Formik, FormikProps } from 'formik';\nimport TodoForm, { TodoFormData, validationSchema } from '../forms/TodoForm';\nimport { TodoData, TodoPutData } from '../types/todos';\nimport { updateTodo } from '../store/todos/operations';\n\ninterface Props {\n  todo: TodoData;\n  isOpen: boolean;\n  handleClose: () => void;\n}\n\nconst TodoEditDialog: React.FunctionComponent<Props> = ({ todo, isOpen, handleClose }: Props) => {\n  const dispatch = useDispatch();\n  const handleUpdate = async (todoFormData: TodoFormData) => {\n    const todoPutData: TodoPutData = {\n      ...todoFormData,\n      id: todo.id,\n      isCompleted: todo.isCompleted,\n    };\n    dispatch(updateTodo(todoPutData));\n    handleClose();\n  };\n\n  const initialValues: TodoFormData = {\n    name: todo.name,\n    description: todo.description,\n    dueDate: todo.dueDate,\n  };\n\n  return (\n    <Dialog open={isOpen} maxWidth=\"md\" fullWidth scroll=\"paper\">\n      <Formik initialValues={initialValues} onSubmit={handleUpdate} validationSchema={validationSchema} validateOnMount>\n        {(formikProps: FormikProps<TodoFormData>) => (\n          <>\n            <DialogTitle>Edit todo</DialogTitle>\n            <DialogContent>\n              <TodoForm />\n            </DialogContent>\n            <DialogActions>\n              <Button\n                color=\"secondary\"\n                onClick={formikProps.handleSubmit as any}\n                disabled={formikProps.isSubmitting || !formikProps.isValid}\n              >\n                Edit\n              </Button>\n              <Button color=\"primary\" onClick={handleClose}>\n                Cancel\n              </Button>\n            </DialogActions>\n          </>\n        )}\n      </Formik>\n    </Dialog>\n  );\n};\n\nexport default TodoEditDialog;\n","import React, { useEffect, useState } from 'react';\nimport { Box, Button, Dialog, DialogActions, DialogContent, DialogTitle, Grid, Typography } from '@mui/material';\nimport DateRangeOutlinedIcon from '@mui/icons-material/DateRangeOutlined';\nimport DescriptionOutlinedIcon from '@mui/icons-material/DescriptionOutlined';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { makeStyles } from '@mui/styles';\nimport { TodoData } from '../types/todos';\nimport { AppState } from '../store/store';\nimport { getTodo } from '../store/todos/selectors';\nimport { loadTodo } from '../store/todos/operations';\nimport formatDate from '../utils/date';\nimport TodoDeleteDialog from './TodoDeleteDialog';\nimport TodoEditDialog from './TodoEditDialog';\n\nconst useStyles = makeStyles(() => ({\n  icon: {\n    paddingRight: '15px',\n  },\n  row: {\n    display: 'flex',\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n}));\n\ninterface Props {\n  todoId: number;\n  isOpen: boolean;\n  handleClose: () => void;\n}\n\nconst TodoViewDialog: React.FunctionComponent<Props> = ({ todoId, isOpen, handleClose }: Props) => {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  useEffect(() => {\n    if (isOpen) {\n      dispatch(loadTodo(todoId));\n    }\n  }, [isOpen]);\n  const todo: TodoData = useSelector((state: AppState) => getTodo(state, todoId));\n\n  const [isDeleteDialogOpen, setIsDeleteDialogOpen] = useState(false);\n  const openDeleteDialog = () => {\n    handleClose();\n    setIsDeleteDialogOpen(true);\n  };\n\n  const [isEditDialogOpen, setIsEditDialogOpen] = useState(false);\n  const openEditDialog = () => {\n    handleClose();\n    setIsEditDialogOpen(true);\n  };\n\n  if (!todo) {\n    return <></>;\n  }\n\n  return (\n    <>\n      <Dialog open={isOpen} onClose={handleClose} maxWidth=\"md\" fullWidth scroll=\"paper\">\n        <DialogTitle>{todo.name}</DialogTitle>\n        <DialogContent>\n          <Grid container spacing={2}>\n            <Grid item xs={12}>\n              <Box className={classes.row}>\n                <DateRangeOutlinedIcon color=\"primary\" className={classes.icon} />\n                <Typography>{formatDate(todo.dueDate)}</Typography>\n              </Box>\n            </Grid>\n            <Grid item xs={12}>\n              <Box className={classes.row}>\n                <DescriptionOutlinedIcon color=\"primary\" className={classes.icon} />\n                {todo.description && <Typography>{todo.description}</Typography>}\n                {!todo.description && <Typography color=\"gray\">This todo has no description.</Typography>}\n              </Box>\n            </Grid>\n          </Grid>\n        </DialogContent>\n        <DialogActions>\n          <Button color=\"secondary\" onClick={openDeleteDialog}>\n            Delete\n          </Button>\n          <Button color=\"secondary\" onClick={openEditDialog}>\n            Edit\n          </Button>\n          <Button color=\"primary\" onClick={handleClose}>\n            Close\n          </Button>\n        </DialogActions>\n      </Dialog>\n      <TodoDeleteDialog todo={todo} isOpen={isDeleteDialogOpen} handleClose={() => setIsDeleteDialogOpen(false)} />\n      <TodoEditDialog todo={todo} isOpen={isEditDialogOpen} handleClose={() => setIsEditDialogOpen(false)} />\n    </>\n  );\n};\n\nexport default TodoViewDialog;\n","import React, { useState } from 'react';\nimport { Chip, Grid, Paper, Typography } from '@mui/material';\nimport DateRangeIcon from '@mui/icons-material/DateRange';\nimport { makeStyles } from '@mui/styles';\nimport { TodoListData } from '../types/todos';\nimport TodoViewDialog from './TodoViewDialog';\nimport formatDate from '../utils/date';\n\nconst useStyles = makeStyles(() => ({\n  paper: {\n    margin: '20px',\n    padding: '20px',\n    backgroundColor: 'whitesmoke',\n    '&:hover': {\n      opacity: 0.7,\n      cursor: 'pointer',\n    },\n  },\n}));\n\ninterface Props {\n  todo: TodoListData;\n}\n\nconst TodoListItem: React.FunctionComponent<Props> = ({ todo }: Props) => {\n  const classes = useStyles();\n  const [isSelected, setIsSelected] = useState(false);\n\n  return (\n    <>\n      <Paper className={classes.paper} onClick={() => setIsSelected(true)}>\n        <Grid container>\n          <Grid item xs={12}>\n            <Typography variant=\"h4\">{todo.name}</Typography>\n          </Grid>\n          <Grid item xs={12}>\n            <Chip icon={<DateRangeIcon />} variant=\"outlined\" label={`Due ${formatDate(todo.dueDate)}`} />\n          </Grid>\n        </Grid>\n      </Paper>\n      <TodoViewDialog todoId={todo.id} isOpen={isSelected} handleClose={() => setIsSelected(false)} />\n    </>\n  );\n};\n\nexport default TodoListItem;\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { AppState } from '../store/store';\nimport { getTodoList } from '../store/todos/selectors';\nimport { TodoListData } from '../types/todos';\nimport TodoListItem from './TodoListItem';\n\nconst TodoList: React.FunctionComponent = () => {\n  const todos: TodoListData[] = useSelector((state: AppState) => getTodoList(state));\n\n  return (\n    <>\n      {[...todos]\n        .sort((a, b) => a.dueDate.valueOf() - b.dueDate.valueOf())\n        .map((todo: TodoListData) => (\n          <TodoListItem todo={todo} key={todo.id} />\n        ))}\n    </>\n  );\n};\n\nexport default TodoList;\n","import React from 'react';\nimport { AppBar, Toolbar, Typography } from '@mui/material';\n\nconst AppBarStyle = {\n  background: 'green',\n};\n\nconst TodoListHeader: React.FunctionComponent = () => (\n  <AppBar position=\"sticky\" style={AppBarStyle}>\n    <Toolbar>\n      <Typography variant=\"h4\">Todo List</Typography>\n    </Toolbar>\n  </AppBar>\n);\n\nexport default TodoListHeader;\n","import React from 'react';\nimport { Button, Dialog, DialogActions, DialogContent, DialogTitle } from '@mui/material';\nimport { useDispatch } from 'react-redux';\nimport { Formik, FormikProps } from 'formik';\nimport TodoForm, { TodoFormData, validationSchema } from '../forms/TodoForm';\nimport { TodoPostData } from '../types/todos';\nimport { createTodo } from '../store/todos/operations';\n\ninterface Props {\n  isOpen: boolean;\n  handleClose: () => void;\n}\n\nconst TodoAddDialog: React.FunctionComponent<Props> = ({ isOpen, handleClose }: Props) => {\n  const dispatch = useDispatch();\n  const handleAdd = async (todoFormData: TodoFormData) => {\n    const todoPostData: TodoPostData = {\n      ...todoFormData,\n    };\n    dispatch(createTodo(todoPostData));\n    handleClose();\n  };\n\n  const initialValues: TodoFormData = {\n    name: '',\n    description: '',\n    dueDate: new Date(),\n  };\n\n  return (\n    <Dialog open={isOpen} maxWidth=\"md\" fullWidth scroll=\"paper\">\n      <Formik initialValues={initialValues} onSubmit={handleAdd} validationSchema={validationSchema} validateOnMount>\n        {(formikProps: FormikProps<TodoFormData>) => (\n          <>\n            <DialogTitle>Add todo</DialogTitle>\n            <DialogContent>\n              <TodoForm />\n            </DialogContent>\n            <DialogActions>\n              <Button\n                color=\"secondary\"\n                onClick={formikProps.handleSubmit as any}\n                disabled={formikProps.isSubmitting || !formikProps.isValid}\n              >\n                Add\n              </Button>\n              <Button color=\"primary\" onClick={handleClose}>\n                Cancel\n              </Button>\n            </DialogActions>\n          </>\n        )}\n      </Formik>\n    </Dialog>\n  );\n};\n\nexport default TodoAddDialog;\n","import React, { useState } from 'react';\nimport { Fab } from '@mui/material';\nimport AddIcon from '@mui/icons-material/Add';\nimport { makeStyles } from '@mui/styles';\nimport TodoAddDialog from './TodoAddDialog';\n\nconst useStyles = makeStyles(() => ({\n  fab: {\n    position: 'fixed',\n    bottom: '40px',\n    right: '40px',\n    backgroundColor: 'green',\n    color: 'white',\n    '&:hover': {\n      backgroundColor: 'green',\n      opacity: 0.7,\n    },\n  },\n}));\n\nconst FloatingActionButton: React.FunctionComponent = () => {\n  const classes = useStyles();\n  const [isAddDialogOpen, setIsAddDialogOpen] = useState(false);\n\n  return (\n    <>\n      <Fab className={classes.fab} onClick={() => setIsAddDialogOpen(true)}>\n        <AddIcon />\n      </Fab>\n      <TodoAddDialog isOpen={isAddDialogOpen} handleClose={() => setIsAddDialogOpen(false)} />\n    </>\n  );\n};\n\nexport default FloatingActionButton;\n","import React, { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport TodoList from '../components/TodoList';\nimport { loadAllTodos } from '../store/todos/operations';\nimport TodoListHeader from '../components/TodoListHeader';\nimport FloatingActionButton from '../components/FloatingActionButton';\n\nconst TodoListPage: React.FunctionComponent = () => {\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(loadAllTodos());\n  }, []);\n\n  return (\n    <>\n      <TodoListHeader />\n      <TodoList />\n      <FloatingActionButton />\n    </>\n  );\n};\n\nexport default TodoListPage;\n","import React from 'react';\nimport { Provider } from 'react-redux';\nimport './App.css';\nimport configureStore from './store/store';\nimport TodoListPage from './pages/TodoListPage';\n\nfunction App() {\n  const store = configureStore();\n\n  return (\n    <Provider store={store}>\n      <TodoListPage />\n    </Provider>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}